{"ast":null,"code":"import { GET_DOGS, GET_BY_NAME, GET_BY_DETAIL, GET_TEMPERAMENTS, FILTER_BY, GET_BY_TEMPERAMENTS, CHARGE_ALL, GET_BY_GROUP, ORDER_BY } from \"./actions\";\nconst initialState = {\n  //estado global al inicio de mi aplicacion \n  allDogs: [],\n  dogsCopy: [],\n  detailDog: {},\n  temperaments: [],\n  filter: [],\n  breed_group: [] //copia del estado para que sea exactamente igual a allDogs|| es una manera de regresar al estado origina; \n};\n\nexport const rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  //es una funcion que es quien sabe que va a modificar \n  switch (action.type) {\n    case GET_DOGS:\n      return {\n        ...state,\n        ///retorna una copia del estado, modificando el valor que quiero modificar y retorna un estado nuevo \n        allDogs: action.payload,\n        dogsCopy: action.payload,\n        filter: action.payload\n      };\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allDogs: action.payload\n      };\n    case GET_BY_DETAIL:\n      return {\n        ...state,\n        detailDog: action.payload\n      };\n    case GET_BYTEMPERAMENTS:\n      return {\n        ...state,\n        temperaments: action.payload\n      };\n\n    //  case GET_BY_TEMPERAMENTS:\n    //    return {...state, \n    //     filter: state.allDogs.filter(el=>el.temperaments? el.temperaments.includes(action.payload):null)\n\n    //   }; \n\n    case FILTER_BY:\n      if (action.payload === 'DB') {\n        var _state$allDogs;\n        if (state.allDogs.filter(item => typeof item.id === 'string').length === 0) {\n          return alert('no dog');\n        }\n        return {\n          ...state,\n          filter: (_state$allDogs = state.allDogs) === null || _state$allDogs === void 0 ? void 0 : _state$allDogs.filter(item => typeof item.id === 'string')\n        };\n      } else {\n        return {\n          ...state,\n          filter: state.allDogs.filter(item => typeof item.id === 'number')\n        };\n      }\n      ;\n    case CHARGE_ALL:\n      return {\n        ...state,\n        filter: state.allDogs\n      };\n    case GET_BY_GROUP:\n      return {\n        ...state,\n        filter: state.allDogs.filter(el => el.breed_group ? el.breed_group.includes(action.payload) : null)\n      };\n    case ORDER_BY:\n      if (action.payload === 'A-Z') {\n        return {\n          ...state,\n          filter: [...state.filter].sort((prev, next) => {\n            if (prev.name > next.name) return 1;\n            if (prev.name < next.name) return -1;\n            return 0;\n          })\n        };\n      }\n      if (action.payload === 'desc') {\n        return {\n          ...state,\n          filter: [...state.filter].sort((prev, next) => prev.weight.slice(0, 2) - next.weight.slice(0, 2))\n        };\n      }\n      if (action.payload === 'asc') {\n        return {\n          ...state,\n          filter: [...state.filter].sort((prev, next) => next.weight.slice(0, 2) - prev.weight.slice(0, 2))\n        };\n      } else {\n        return {\n          ...state,\n          filter: state.allDogs\n        };\n      }\n      ;\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_DOGS","GET_BY_NAME","GET_BY_DETAIL","GET_TEMPERAMENTS","FILTER_BY","GET_BY_TEMPERAMENTS","CHARGE_ALL","GET_BY_GROUP","ORDER_BY","initialState","allDogs","dogsCopy","detailDog","temperaments","filter","breed_group","rootReducer","state","arguments","length","undefined","action","type","payload","GET_BYTEMPERAMENTS","_state$allDogs","item","id","alert","el","includes","sort","prev","next","name","weight","slice"],"sources":["/Users/lizzyortiz/Downloads/PI-Dogs-main/client/src/redux/reducer.js"],"sourcesContent":["import { GET_DOGS, GET_BY_NAME, GET_BY_DETAIL, GET_TEMPERAMENTS,FILTER_BY,GET_BY_TEMPERAMENTS,CHARGE_ALL,GET_BY_GROUP, ORDER_BY} from \"./actions\"\n\nconst initialState ={    //estado global al inicio de mi aplicacion \nallDogs:[],dogsCopy:[], detailDog: {}, temperaments:[], filter:[], breed_group:[] //copia del estado para que sea exactamente igual a allDogs|| es una manera de regresar al estado origina; \n\n}; \n\n\nexport const rootReducer=(state = initialState,  action)=>{ //es una funcion que es quien sabe que va a modificar \n  switch (action.type) {\n    case GET_DOGS:\n        return {...state, ///retorna una copia del estado, modificando el valor que quiero modificar y retorna un estado nuevo \n            allDogs: action.payload, \n            dogsCopy: action.payload,\n            filter:action.payload,\n        };   \n      case GET_BY_NAME:\n        return {...state, \n          allDogs:action.payload,\n\n        }; \n\n     case GET_BY_DETAIL:\n         return{...state,\n          detailDog:action.payload,\n      }; \n\n\n    case GET_BYTEMPERAMENTS:\n        return {...state,\n        temperaments: action.payload,\n      \n      }; \n\n  //  case GET_BY_TEMPERAMENTS:\n  //    return {...state, \n  //     filter: state.allDogs.filter(el=>el.temperaments? el.temperaments.includes(action.payload):null)\n\n  //   }; \n  \n    case FILTER_BY:\n      if(action.payload === 'DB'){\n        if( state.allDogs.filter((item)=> (typeof item.id) === 'string').length === 0 ){\n           return alert('no dog')\n        }\n        return {\n            ...state, \n            filter: state.allDogs?.filter((item)=> (typeof item.id) === 'string')}\n        }\n      \n    else {\n        return {\n            ...state, \n            filter: state.allDogs.filter((item)=> (typeof item.id) === 'number')}\n        } ;  \n\n\n    case CHARGE_ALL:\n      return{\n        ...state,\n        filter:state.allDogs\n      }; \n\n    case GET_BY_GROUP:\n    return{\n      ...state,\n      filter: state.allDogs.filter(el=>el.breed_group? el.breed_group.includes(action.payload):null)\n    }; \n\n    case ORDER_BY:\n      if(action.payload === 'A-Z'){\n      return {\n        ...state,\n        filter: [...state.filter].sort((prev, next) => {\n          if(prev.name > next.name) return 1\n          if(prev.name < next.name) return -1\n          return 0\n      })}}\n      if(action.payload === 'desc'){\n        return {\n            ...state, \n            filter: [...state.filter].sort((prev,next) => prev.weight.slice(0,2) - next.weight.slice(0,2) )}\n       }\n          \n    if(action.payload === 'asc'){\n        return {\n            ...state, \n            filter: [...state.filter].sort((prev,next) => next.weight.slice(0,2) - prev.weight.slice(0,2))}\n        }     \n    else {\n        return {\n            ...state, \n            filter: state.allDogs}\n        };\n\n\n    default:\n        return state; \n  }\n}\n\nexport default rootReducer; "],"mappings":"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"},"metadata":{},"sourceType":"module"}