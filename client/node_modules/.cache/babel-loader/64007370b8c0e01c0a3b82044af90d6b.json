{"ast":null,"code":"\n// import React, {useState, useEffect} from 'react';\n// import { useDispatch, useSelector} from 'react-redux';\n\n// import validate from \"./validate\";\n\n// import {getTemperaments, dogPost} from \"../../redux/actions\"\n// const Form = () => {\n//   //formulario y estado deben de tener los mismos valores\n//   const dispatch = useDispatch()\n\n//   useEffect(()=> {\n//     dispatch(getTemperaments())\n//   }, [dispatch])\n\n//   const temperaments = useSelector(state => state.temperament)\n\n//   const [errors, setErrors] = useState({});\n\n//   const [input, setInput] = useState({\n//     image:\"\",\n//     name: \"\",\n//     height_min: \"\",\n//     height_max: \"\",\n//     weight_min: \"\",\n//     weight_max: \"\",\n//     life_span_min: \"\",\n//     life_span_max: \"\",\n//     temperament: []\n//   });\n\n//   const [selectNameState, setSelectNameState] = useState([])\n\n//   // console.log(\"input form :\",input.temperament)\n\n//   function handleChange(e){\n//     setInput({\n//       ...input,\n//       [e.target.name]: e.target.value\n//     });\n//     setErrors(validate({\n//       ...input,\n//       [e.target.name]: e.target.value\n//     }))\n//   }\n\n//   function handleSelect(e){\n\n//     if(input.temperament.includes(e.target.value)) return\n\n//     setInput({\n//       ...input,\n//       temperament: [...input.temperament, e.target.value]\n//     })\n\n//     const selectName = e.target.value;\n//     if(selectName === \"default\") return;\n//     setInput({...input , temperament:[...input.temperament, selectName]})\n//     setSelectNameState([...selectNameState, temperaments.find(e => e.id === parseInt(selectName))])\n//   }\n\n//   function handleSubmit(e){\n//     e.preventDefault();\n//     if(!errors.name && !errors.height_min && !errors.height_max &&!errors.weight_min && !errors.weight_max) {\n//       try {\n//         dispatch(dogPost(input))\n//         setInput({\n//           image:\"\",\n//           name: \"\",\n//           height_min: \"\",\n//           height_max: \"\",\n//           weight_min: \"\",\n//           weight_max: \"\",\n//           life_span_min: \"\",\n//           life_span_max: \"\",\n//           temperament: []\n//         })\n//         setSelectNameState([])\n//       } catch (error) {\n//         console.log(error)\n//       }\n//     } \n//   }\n\n//   function handleDelete(e){\n//     setInput({...input, temperament : input.temperament.filter(t => t !== e.target.value)})\n//     setSelectNameState(selectNameState.filter(t => t.id !== parseInt(e.target.value)))\n//   }\n\n//   return(\n//     <div className='Form_container'>\n//       <h2 className='form_title'>AGREGA LOS DATOS DE TU <span className='form_title_naranja'>PERRO</span></h2>\n//       <p className='datos_obligatorios'>Datos con * obligatorios</p>\n\n//       <form className='form' action=\"\" onSubmit={handleSubmit}>\n//         {/* ---- INPUT NAME ---- */}\n//         <div>\n//           <div>\n//             <label>Nombre *</label>\n//             <div className={errors.name ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input' placeholder='Eje: naruto' onChange={handleChange} name=\"name\" value={input.name}/>\n//             </div>\n//             {errors.name && (<span className='dato_incorrecto'>{errors.name}</span>)}\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT IMAGE ---- */}\n//         <div>\n//           <label>Imagen</label>\n//           <div className= \"div_input\">\n//             <input className='form_input' placeholder='Url de la imagen' onChange={handleChange} name=\"image\" value={input.image}/>\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT HEIGHT ---- */}\n//         <div className='div_inputs_dobles'>\n//           <div className='max'>\n//             <label>Altura *</label>\n//             <div className={errors.height_max ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input min' placeholder='Max' onChange={handleChange} name=\"height_max\" value={input.height_max}/>\n//               <span className='unidad'>CM</span>\n//             </div>\n//             {errors.height_max && (<span className='dato_incorrecto'>{errors.height_max}</span>)}\n//           </div>\n\n//           <div className='min'>\n//             <label className='label_min'>altura</label>\n//             <div className={errors.height_min ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input max' placeholder='Min' onChange={handleChange} name=\"height_min\" value={input.height_min}/>\n//               <span className='unidad'>KG</span>\n//             </div>\n//             {errors.height_min && (<span className='dato_incorrecto'>{errors.height_min}</span>)}\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT WEIGHT ---- */}\n//         <div className='div_inputs_dobles'>\n//           <div className='max'>\n//             <label>Peso *</label>\n//             <div className={errors.weight_max ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input min' placeholder='Max' onChange={handleChange} name=\"weight_max\" value={input.weight_max}/>\n//               <span className='unidad'>KG</span>\n//             </div>\n//             {errors.weight_max && (<span className='dato_incorrecto'>{errors.weight_max}</span>)}\n//           </div>\n\n//           <div className='min'>\n//             <label className='label_min'>Peso</label>\n//             <div className={errors.weight_min ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input max' placeholder='Min' onChange={handleChange} name=\"weight_min\" value={input.weight_min}/>\n//               <span className='unidad'>KG</span>\n//             </div>\n//             {errors.weight_min && (<span className='dato_incorrecto'>{errors.weight_min}</span>)}\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT LIFE_SPAN ---- */}\n//         <div className='div_inputs_dobles'>\n//           <div className='max'>\n//             <label>Años de vida</label>\n//             <div className={errors.life_span_max ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input min_years' placeholder='Max' onChange={handleChange} name=\"life_span_max\" value={input.life_span_max}/>\n//               <span className='unidad'>Años</span>\n//             </div>\n//             {errors.life_span_max && (<span className='dato_incorrecto'>{errors.life_span_max}</span>)}\n//           </div>\n\n//           <div className='min'>\n//             <label className='label_min'>anos de vida</label>\n//             <div className={errors.life_span_min ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input max_years' placeholder='Min' onChange={handleChange} name=\"life_span_min\" value={input.life_span_min}/>\n//               <span className='unidad'>Años</span>\n//             </div>\n//             {errors.life_span_min && (<span className='dato_incorrecto'>{errors.life_span_min}</span>)}\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT TEMPERAMENT ---- */}\n//         <div>\n//           <label>Temperaments</label>\n//           <div className=\"div_input\">\n//             <select className='select_form' name=\"temperament\" onChange={handleSelect}>\n//               {temperaments.map((t, i) => {\n//                 return(\n//                   <option className='option_form' key={i} value={t.id}>{t.name}</option>\n//                 )\n//               })}\n//             </select>\n//           </div>\n//           <div className='div_form_final_temps'>\n//             <ul className='ul_temp'>\n//               {selectNameState.map((e, i) => {\n//                 return(\n//                 <li className='li_temp' key={i}>\n//                   {e.name}\n//                   <button className='delete_temp' type='button' value={e.id} onClick={handleDelete}>x</button>\n//                 </li>\n//                 )\n//               })}\n//             </ul>\n//           </div>\n//         </div>\n\n//         <input className={errors.name || errors.height_min || errors.height_max || errors.weight_min || errors.weight_max ? \"submit none\" : \"submit\"} type=\"submit\" value=\"crear\"/>\n\n//       </form>\n//     </div>\n//   )\n// }\n\n// export default Form;","map":{"version":3,"names":[],"sources":["/Users/lizzyortiz/Downloads/PI-Dogs-main/client/src/views/Form/Form.jsx"],"sourcesContent":["\n// import React, {useState, useEffect} from 'react';\n// import { useDispatch, useSelector} from 'react-redux';\n\n\n// import validate from \"./validate\";\n\n// import {getTemperaments, dogPost} from \"../../redux/actions\"\n// const Form = () => {\n//   //formulario y estado deben de tener los mismos valores\n//   const dispatch = useDispatch()\n\n//   useEffect(()=> {\n//     dispatch(getTemperaments())\n//   }, [dispatch])\n\n//   const temperaments = useSelector(state => state.temperament)\n\n\n//   const [errors, setErrors] = useState({});\n\n//   const [input, setInput] = useState({\n//     image:\"\",\n//     name: \"\",\n//     height_min: \"\",\n//     height_max: \"\",\n//     weight_min: \"\",\n//     weight_max: \"\",\n//     life_span_min: \"\",\n//     life_span_max: \"\",\n//     temperament: []\n//   });\n\n//   const [selectNameState, setSelectNameState] = useState([])\n  \n//   // console.log(\"input form :\",input.temperament)\n\n//   function handleChange(e){\n//     setInput({\n//       ...input,\n//       [e.target.name]: e.target.value\n//     });\n//     setErrors(validate({\n//       ...input,\n//       [e.target.name]: e.target.value\n//     }))\n//   }\n\n//   function handleSelect(e){\n\n//     if(input.temperament.includes(e.target.value)) return\n\n//     setInput({\n//       ...input,\n//       temperament: [...input.temperament, e.target.value]\n//     })\n\n//     const selectName = e.target.value;\n//     if(selectName === \"default\") return;\n//     setInput({...input , temperament:[...input.temperament, selectName]})\n//     setSelectNameState([...selectNameState, temperaments.find(e => e.id === parseInt(selectName))])\n//   }\n\n//   function handleSubmit(e){\n//     e.preventDefault();\n//     if(!errors.name && !errors.height_min && !errors.height_max &&!errors.weight_min && !errors.weight_max) {\n//       try {\n//         dispatch(dogPost(input))\n//         setInput({\n//           image:\"\",\n//           name: \"\",\n//           height_min: \"\",\n//           height_max: \"\",\n//           weight_min: \"\",\n//           weight_max: \"\",\n//           life_span_min: \"\",\n//           life_span_max: \"\",\n//           temperament: []\n//         })\n//         setSelectNameState([])\n//       } catch (error) {\n//         console.log(error)\n//       }\n//     } \n//   }\n\n\n//   function handleDelete(e){\n//     setInput({...input, temperament : input.temperament.filter(t => t !== e.target.value)})\n//     setSelectNameState(selectNameState.filter(t => t.id !== parseInt(e.target.value)))\n//   }\n\n\n//   return(\n//     <div className='Form_container'>\n//       <h2 className='form_title'>AGREGA LOS DATOS DE TU <span className='form_title_naranja'>PERRO</span></h2>\n//       <p className='datos_obligatorios'>Datos con * obligatorios</p>\n\n//       <form className='form' action=\"\" onSubmit={handleSubmit}>\n//         {/* ---- INPUT NAME ---- */}\n//         <div>\n//           <div>\n//             <label>Nombre *</label>\n//             <div className={errors.name ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input' placeholder='Eje: naruto' onChange={handleChange} name=\"name\" value={input.name}/>\n//             </div>\n//             {errors.name && (<span className='dato_incorrecto'>{errors.name}</span>)}\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT IMAGE ---- */}\n//         <div>\n//           <label>Imagen</label>\n//           <div className= \"div_input\">\n//             <input className='form_input' placeholder='Url de la imagen' onChange={handleChange} name=\"image\" value={input.image}/>\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT HEIGHT ---- */}\n//         <div className='div_inputs_dobles'>\n//           <div className='max'>\n//             <label>Altura *</label>\n//             <div className={errors.height_max ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input min' placeholder='Max' onChange={handleChange} name=\"height_max\" value={input.height_max}/>\n//               <span className='unidad'>CM</span>\n//             </div>\n//             {errors.height_max && (<span className='dato_incorrecto'>{errors.height_max}</span>)}\n//           </div>\n\n//           <div className='min'>\n//             <label className='label_min'>altura</label>\n//             <div className={errors.height_min ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input max' placeholder='Min' onChange={handleChange} name=\"height_min\" value={input.height_min}/>\n//               <span className='unidad'>KG</span>\n//             </div>\n//             {errors.height_min && (<span className='dato_incorrecto'>{errors.height_min}</span>)}\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT WEIGHT ---- */}\n//         <div className='div_inputs_dobles'>\n//           <div className='max'>\n//             <label>Peso *</label>\n//             <div className={errors.weight_max ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input min' placeholder='Max' onChange={handleChange} name=\"weight_max\" value={input.weight_max}/>\n//               <span className='unidad'>KG</span>\n//             </div>\n//             {errors.weight_max && (<span className='dato_incorrecto'>{errors.weight_max}</span>)}\n//           </div>\n\n//           <div className='min'>\n//             <label className='label_min'>Peso</label>\n//             <div className={errors.weight_min ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input max' placeholder='Min' onChange={handleChange} name=\"weight_min\" value={input.weight_min}/>\n//               <span className='unidad'>KG</span>\n//             </div>\n//             {errors.weight_min && (<span className='dato_incorrecto'>{errors.weight_min}</span>)}\n//           </div>\n//         </div>\n\n//         {/* ---- INPUT LIFE_SPAN ---- */}\n//         <div className='div_inputs_dobles'>\n//           <div className='max'>\n//             <label>Años de vida</label>\n//             <div className={errors.life_span_max ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input min_years' placeholder='Max' onChange={handleChange} name=\"life_span_max\" value={input.life_span_max}/>\n//               <span className='unidad'>Años</span>\n//             </div>\n//             {errors.life_span_max && (<span className='dato_incorrecto'>{errors.life_span_max}</span>)}\n//           </div>\n\n//           <div className='min'>\n//             <label className='label_min'>anos de vida</label>\n//             <div className={errors.life_span_min ? \"div_input error\" : \"div_input\"}>\n//               <input className='form_input max_years' placeholder='Min' onChange={handleChange} name=\"life_span_min\" value={input.life_span_min}/>\n//               <span className='unidad'>Años</span>\n//             </div>\n//             {errors.life_span_min && (<span className='dato_incorrecto'>{errors.life_span_min}</span>)}\n//           </div>\n//         </div>\n        \n//         {/* ---- INPUT TEMPERAMENT ---- */}\n//         <div>\n//           <label>Temperaments</label>\n//           <div className=\"div_input\">\n//             <select className='select_form' name=\"temperament\" onChange={handleSelect}>\n//               {temperaments.map((t, i) => {\n//                 return(\n//                   <option className='option_form' key={i} value={t.id}>{t.name}</option>\n//                 )\n//               })}\n//             </select>\n//           </div>\n//           <div className='div_form_final_temps'>\n//             <ul className='ul_temp'>\n//               {selectNameState.map((e, i) => {\n//                 return(\n//                 <li className='li_temp' key={i}>\n//                   {e.name}\n//                   <button className='delete_temp' type='button' value={e.id} onClick={handleDelete}>x</button>\n//                 </li>\n//                 )\n//               })}\n//             </ul>\n//           </div>\n//         </div>\n\n//         <input className={errors.name || errors.height_min || errors.height_max || errors.weight_min || errors.weight_max ? \"submit none\" : \"submit\"} type=\"submit\" value=\"crear\"/>\n\n//       </form>\n//     </div>\n//   )\n// }\n  \n\n\n// export default Form;\n\n"],"mappings":";AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAIA"},"metadata":{},"sourceType":"module"}