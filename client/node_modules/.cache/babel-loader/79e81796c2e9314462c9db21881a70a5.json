{"ast":null,"code":"// import { useState } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import validate from \"./validate\";\n// import style  from \"./Form.module.css\"\n// import { getTemperaments } from \"../../redux/actions\";\n// import { useEffect } from \"react\";\n// import {  useDispatch } from \"react-redux\"; //useSelector\n// const Form = () => {\n//   //formulario y estado deben de tener los mismos valores\n//   const dispatch = useDispatch(); // Aquí guardamos el hook useDispatch en una constante\n//   // const temperaments = useSelector((state) => state.temperaments);\n\n//   const [form, setForm] = useState({\n//     name: \"\",\n//     min_height: \"\",\n//     max_height: \"\",\n//     min_weight: \"\",\n//     max_weight: \"\",\n//     life_span: \"\",\n//     temperaments: [],\n//     image: \"\",\n//   });\n\n//   const [errors, setErrors] = useState({\n//     name: \"\",\n//     min_height: \"\",\n//     max_height: \"\",\n//     min_weight: \"\",\n//     max_weight: \"\",\n//     weight: \"\",\n//     life_span: \"\",\n//     temperaments: [],\n//     image: \"\",\n//   });\n//   useEffect(() => {\n//     // Utilizamos el dispatch para llamar a la función getTemperaments\n//     dispatch(getTemperaments());\n//   }, [dispatch]);\n\n//   const changeHandler = (e) => {\n//     //e, me dice quien disparo el event\n//     const property = e.target.name;\n//     const value = e.target.value;\n\n//     setErrors(validate({ ...form, [property]: value })); //el mismo estado tiene validate y va a la par\n//     setForm({ ...form, [property]: value }); //cambio el estado y cambia el input\n//   };\n\n//   const submitHandler = (e) => {\n//     const height = `${form.min_height}-${form.max_height}`; //creo las variables y las concateno separandolas con un guion\n//     const weight = `${form.min_weight}-${form.max_weight}`;\n\n//     e.preventDefault(); ///ya no se va la pag ref\n//     axios\n//       .post(\"http://localhost:3001/dogs\", { ...form, height, weight }) //envio el body form  junto con las variables (weight y hei)\n//       .then((res) => alert(res))\n//       .catch((err) => alert(err));\n//   };\n\n//   return (\n//     <div>\n//         <h2 className={style.title}>Create a new Dog</h2>\n\n//     <div className= {style.cardContainer}>\n\n//     <form className= { style.ent} onSubmit={submitHandler}>\n//       <div>\n\n//         <label className={style.label}>Name:</label>\n//         <input\n//           type=\"text \"\n//           value={form.name}\n//           onChange={changeHandler}\n//           name=\"name\"\n//           placeholder=\"Name\"\n\n//         />\n//         {errors.name && <span>{errors.name}</span>}\n//       </div>\n\n//       <div>\n//         <label className={style.label} >Min Height:</label>\n//         <input\n//           type=\"text\"\n//           value={form.min_height}\n//           onChange={changeHandler}\n//           name=\"min_height\"\n\n//           className=\"number\"\n//               placeholder=\"Height Min\"\n\n//         />\n//         {errors.min_height && <span>{errors.min_height}</span>}\n//       </div>\n\n//       <div>\n//         <label className={style.label} >Max Height:</label>\n//         <input\n//           type=\"text\"\n//           value={form.max_height}\n//           onChange={changeHandler}\n//           name=\"max_height\"\n//           placeholder=\"Height Max\"\n//         />\n//         {errors.max_height && <span>{errors.max_height}</span>}\n//       </div>\n//       <div></div>\n//       <div>\n//         <label className={style.label}>Min Weight:</label>\n//         <input\n//           type=\"text\"\n//           value={form.min_weight}\n//           onChange={changeHandler}\n//           name=\"min_weight\"\n//           placeholder=\"Weight Min\"\n//         />\n//          {errors.min_weight && <span>{errors.min_weight}</span>}\n//       </div>\n//       <div>\n//         <label className={style.label}>Max Weight:</label>\n//         <input\n//           type=\"text\"\n//           value={form.max_weight}\n//           onChange={changeHandler}\n//           name=\"max_weight\"\n//           placeholder=\"Weight Max\"\n//         />\n//         {errors.max_weight && <span>{errors.max_weight}</span>}\n//       </div>\n//       <div>\n//         <label className={style.label}>Life Span:</label>\n//         <input\n//           type=\"text \"\n//           value={form.life_span}\n//           onChange={changeHandler}\n//           name=\"life_span\"\n//           placeholder=\"Life Span\"\n//         />\n//         {errors.life_span && <span>{errors.life_span}</span>}\n//       </div>\n//       <div>\n//         <label className={style.label}>Temperament:</label>\n//         <option value=\"default\">Choose</option>\n//         {/* <select\n//     value={form.temperaments}\n//     onChange={(e) =>\n//       setForm({ ...form, temperaments: Array.from(e.target.selectedOptions, (option) => option.value) })\n//     }\n//     name=\"temperaments\"\n//     multiple\n//   >\n//     {temperaments.map((temperament) => (\n//       <option key={temperament.id} value={temperament.name}>\n//         {temperament.name}\n//       </option>\n//     ))}\n//   </select> */}\n//       </div>\n//       <div>\n//         <label className={style.label}>image:</label>\n//         <input\n//           type=\"text \"\n//           value={form.image}\n//           onChange={changeHandler}\n//           name=\"image\"\n//           placeholder=\"Put a URL\"\n//         />\n//       </div>\n//       <button type=\"submit\">Lets Create</button>\n//     </form>\n\n//     </div>\n//     <Link to=\"/home\">\n//     <button className={style.btn}>Back To Home</button>\n//     </Link>\n//     </div>\n//   );\n// };\n\n// export default Form;","map":{"version":3,"names":[],"sources":["/Users/lizzyortiz/Downloads/PI-Dogs-main/client/src/views/Form/Form.jsx"],"sourcesContent":["// import { useState } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import validate from \"./validate\";\n// import style  from \"./Form.module.css\"\n// import { getTemperaments } from \"../../redux/actions\";\n// import { useEffect } from \"react\";\n// import {  useDispatch } from \"react-redux\"; //useSelector\n// const Form = () => {\n//   //formulario y estado deben de tener los mismos valores\n//   const dispatch = useDispatch(); // Aquí guardamos el hook useDispatch en una constante\n//   // const temperaments = useSelector((state) => state.temperaments);\n\n\n//   const [form, setForm] = useState({\n//     name: \"\",\n//     min_height: \"\",\n//     max_height: \"\",\n//     min_weight: \"\",\n//     max_weight: \"\",\n//     life_span: \"\",\n//     temperaments: [],\n//     image: \"\",\n//   });\n\n//   const [errors, setErrors] = useState({\n//     name: \"\",\n//     min_height: \"\",\n//     max_height: \"\",\n//     min_weight: \"\",\n//     max_weight: \"\",\n//     weight: \"\",\n//     life_span: \"\",\n//     temperaments: [],\n//     image: \"\",\n//   });\n//   useEffect(() => {\n//     // Utilizamos el dispatch para llamar a la función getTemperaments\n//     dispatch(getTemperaments());\n//   }, [dispatch]);\n\n\n//   const changeHandler = (e) => {\n//     //e, me dice quien disparo el event\n//     const property = e.target.name;\n//     const value = e.target.value;\n\n//     setErrors(validate({ ...form, [property]: value })); //el mismo estado tiene validate y va a la par\n//     setForm({ ...form, [property]: value }); //cambio el estado y cambia el input\n//   };\n  \n//   const submitHandler = (e) => {\n//     const height = `${form.min_height}-${form.max_height}`; //creo las variables y las concateno separandolas con un guion\n//     const weight = `${form.min_weight}-${form.max_weight}`;\n   \n//     e.preventDefault(); ///ya no se va la pag ref\n//     axios\n//       .post(\"http://localhost:3001/dogs\", { ...form, height, weight }) //envio el body form  junto con las variables (weight y hei)\n//       .then((res) => alert(res))\n//       .catch((err) => alert(err));\n//   };\n\n//   return (\n//     <div>\n//         <h2 className={style.title}>Create a new Dog</h2>\n\n   \n//     <div className= {style.cardContainer}>\n         \n        \n//     <form className= { style.ent} onSubmit={submitHandler}>\n//       <div>\n       \n\n//         <label className={style.label}>Name:</label>\n//         <input\n//           type=\"text \"\n//           value={form.name}\n//           onChange={changeHandler}\n//           name=\"name\"\n//           placeholder=\"Name\"\n\n//         />\n//         {errors.name && <span>{errors.name}</span>}\n//       </div>\n\n//       <div>\n//         <label className={style.label} >Min Height:</label>\n//         <input\n//           type=\"text\"\n//           value={form.min_height}\n//           onChange={changeHandler}\n//           name=\"min_height\"\n\n//           className=\"number\"\n//               placeholder=\"Height Min\"\n\n//         />\n//         {errors.min_height && <span>{errors.min_height}</span>}\n//       </div>\n\n//       <div>\n//         <label className={style.label} >Max Height:</label>\n//         <input\n//           type=\"text\"\n//           value={form.max_height}\n//           onChange={changeHandler}\n//           name=\"max_height\"\n//           placeholder=\"Height Max\"\n//         />\n//         {errors.max_height && <span>{errors.max_height}</span>}\n//       </div>\n//       <div></div>\n//       <div>\n//         <label className={style.label}>Min Weight:</label>\n//         <input\n//           type=\"text\"\n//           value={form.min_weight}\n//           onChange={changeHandler}\n//           name=\"min_weight\"\n//           placeholder=\"Weight Min\"\n//         />\n//          {errors.min_weight && <span>{errors.min_weight}</span>}\n//       </div>\n//       <div>\n//         <label className={style.label}>Max Weight:</label>\n//         <input\n//           type=\"text\"\n//           value={form.max_weight}\n//           onChange={changeHandler}\n//           name=\"max_weight\"\n//           placeholder=\"Weight Max\"\n//         />\n//         {errors.max_weight && <span>{errors.max_weight}</span>}\n//       </div>\n//       <div>\n//         <label className={style.label}>Life Span:</label>\n//         <input\n//           type=\"text \"\n//           value={form.life_span}\n//           onChange={changeHandler}\n//           name=\"life_span\"\n//           placeholder=\"Life Span\"\n//         />\n//         {errors.life_span && <span>{errors.life_span}</span>}\n//       </div>\n//       <div>\n//         <label className={style.label}>Temperament:</label>\n//         <option value=\"default\">Choose</option>\n//         {/* <select\n//     value={form.temperaments}\n//     onChange={(e) =>\n//       setForm({ ...form, temperaments: Array.from(e.target.selectedOptions, (option) => option.value) })\n//     }\n//     name=\"temperaments\"\n//     multiple\n//   >\n//     {temperaments.map((temperament) => (\n//       <option key={temperament.id} value={temperament.name}>\n//         {temperament.name}\n//       </option>\n//     ))}\n//   </select> */}\n//       </div>\n//       <div>\n//         <label className={style.label}>image:</label>\n//         <input\n//           type=\"text \"\n//           value={form.image}\n//           onChange={changeHandler}\n//           name=\"image\"\n//           placeholder=\"Put a URL\"\n//         />\n//       </div>\n//       <button type=\"submit\">Lets Create</button>\n//     </form>\n    \n//     </div>\n//     <Link to=\"/home\">\n//     <button className={style.btn}>Back To Home</button>\n//     </Link>\n//     </div>\n//   );\n// };\n\n// export default Form;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}