{"ast":null,"code":"var _jsxFileName = \"/Users/lizzyortiz/Downloads/PI-Dogs-main/client/src/components/FilterBy/FilterBy.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import style from \"./FilterBy.module.css\"; \n// import { getByTemperaments, filterBy, chargeAll, orderBy} from \"../../redux/actions\";\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n// const FilterBy=()=>{\n\n//     const dispatch = useDispatch();\n//     const temperaments = useSelector((state) => state.temperaments);\n\n//     const handleSelect = (e) => {      \n//         dispatch(getByTemperaments(e.target.value));\n//       e.target.value = 'default'\n//         };\n\n//     const handleSelect2 =(e)=>{\n//       dispatch(orderBy(e.target.value))\n//       e.target.value = 'default'\n//         }\n\n//         return (\n//             <section>\n\n//               <div className = {style.selectdiv}>\n//                 <select className={style.select} onChange={handleSelect} name=\"\" id=\"\">     \n//                   <option value=\"default\">FILTER BY...</option>\n\n//                   <optgroup label=\"TEMPERAMENTS...\">\n//                   {temperaments &&\n//                 temperaments.map((el) => (\n//                   <option key={el.name} value={el.name}>\n//                     {el.name}</option>\n//                      ))}\n\n//                   </optgroup>\n//                   </select>\n\n//                    <select className={style.select} onChange={handleSelect2} name=\"\" id=\"\">\n//                   <option value=\"default\">ORDER BY...</option>\n//                   <optgroup label=\"Weight\">\n//                     <option value=\"asc\">Max to Min</option>\n//                     <option value=\"desc\">Min to Max</option>\n//                   </optgroup>\n//                   <optgroup label=\"Alphabetic\">\n//                     <option value=\"A-Z\">A - Z</option>\n//                     <option value=\"Z-A\">Z - A</option>\n//                   </optgroup>\n//                 </select>\n\n//                 <div>\n\n//                 </div>\n//                 <div className={style.buttons}>\n//                   <button className={style.buton}value=\"TODOS\" onClick={() => dispatch(chargeAll())}>\n//                     ALL\n//                   </button >\n//                   <button className={style.buton} value=\"DB\" onClick={() => dispatch(filterBy(\"DB\"))}>\n//                     DATABASE\n//                   </button>\n//                   <button className={style.buton} value=\"API\" onClick={() => dispatch(filterBy(\"API\"))}>\n//                     API\n//                   </button>\n//                 </div>\n//               </div>\n//               </section>\n\n//           );\n//         };\n\n// export default FilterBy; \n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getByTemperaments } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterBy = () => {\n  _s();\n  const [selectedTemperament, setSelectedTemperament] = useState('');\n  const dispatch = useDispatch();\n  const allDogs = useSelector(state => state.dogs);\n  const filteredDogs = useSelector(state => state.filtered);\n  const temperaments = useSelector(state => state.temperaments);\n  useEffect(() => {\n    dispatch(getByTemperaments(selectedTemperament));\n  }, [dispatch, selectedTemperament]);\n  const handleSelectChange = e => {\n    setSelectedTemperament(e.target.value);\n  };\n  const handleTemperamentClick = e => {\n    setSelectedTemperament(e.target.value);\n  };\n  const getDogsByTemperament = temperament => {\n    return allDogs.filter(dog => dog.temperament && dog.temperament.includes(temperament));\n  };\n  const dogsBySelectedTemperament = getDogsByTemperament(selectedTemperament);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dogs by Temperament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTemperament,\n      onChange: handleSelectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select a temperament --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), temperaments.map(temp => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: temp.name,\n        onClick: handleTemperamentClick,\n        children: temp.name\n      }, temp.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dogsBySelectedTemperament.map(dog => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dog.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, dog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterBy, \"4e/5gfjNA5HrCld5lVXeBpR9k/8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = FilterBy;\nexport default FilterBy;\nvar _c;\n$RefreshReg$(_c, \"FilterBy\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getByTemperaments","jsxDEV","_jsxDEV","FilterBy","_s","selectedTemperament","setSelectedTemperament","dispatch","allDogs","state","dogs","filteredDogs","filtered","temperaments","handleSelectChange","e","target","value","handleTemperamentClick","getDogsByTemperament","temperament","filter","dog","includes","dogsBySelectedTemperament","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","temp","name","onClick","id","_c","$RefreshReg$"],"sources":["/Users/lizzyortiz/Downloads/PI-Dogs-main/client/src/components/FilterBy/FilterBy.jsx"],"sourcesContent":["\n\n// import React from \"react\";\n// import style from \"./FilterBy.module.css\"; \n// import { getByTemperaments, filterBy, chargeAll, orderBy} from \"../../redux/actions\";\n// import { useDispatch } from \"react-redux\";\n// import { useSelector } from \"react-redux\";\n// const FilterBy=()=>{\n\n\n//     const dispatch = useDispatch();\n//     const temperaments = useSelector((state) => state.temperaments);\n  \n    \n\n//     const handleSelect = (e) => {      \n//         dispatch(getByTemperaments(e.target.value));\n//       e.target.value = 'default'\n//         };\n\n  \n//     const handleSelect2 =(e)=>{\n//       dispatch(orderBy(e.target.value))\n//       e.target.value = 'default'\n//         }\n\n\n//         return (\n//             <section>\n   \n//               <div className = {style.selectdiv}>\n//                 <select className={style.select} onChange={handleSelect} name=\"\" id=\"\">     \n//                   <option value=\"default\">FILTER BY...</option>\n                \n//                   <optgroup label=\"TEMPERAMENTS...\">\n//                   {temperaments &&\n//                 temperaments.map((el) => (\n//                   <option key={el.name} value={el.name}>\n//                     {el.name}</option>\n//                      ))}\n            \n                   \n//                   </optgroup>\n//                   </select>\n      \n      \n//                    <select className={style.select} onChange={handleSelect2} name=\"\" id=\"\">\n//                   <option value=\"default\">ORDER BY...</option>\n//                   <optgroup label=\"Weight\">\n//                     <option value=\"asc\">Max to Min</option>\n//                     <option value=\"desc\">Min to Max</option>\n//                   </optgroup>\n//                   <optgroup label=\"Alphabetic\">\n//                     <option value=\"A-Z\">A - Z</option>\n//                     <option value=\"Z-A\">Z - A</option>\n//                   </optgroup>\n//                 </select>\n      \n                \n//                 <div>\n                  \n//                 </div>\n//                 <div className={style.buttons}>\n//                   <button className={style.buton}value=\"TODOS\" onClick={() => dispatch(chargeAll())}>\n//                     ALL\n//                   </button >\n//                   <button className={style.buton} value=\"DB\" onClick={() => dispatch(filterBy(\"DB\"))}>\n//                     DATABASE\n//                   </button>\n//                   <button className={style.buton} value=\"API\" onClick={() => dispatch(filterBy(\"API\"))}>\n//                     API\n//                   </button>\n//                 </div>\n//               </div>\n//               </section>\n   \n     \n//           );\n//         };\n\n// export default FilterBy; \n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getByTemperaments } from \"../../redux/actions\";\n\nconst FilterBy = () => {\n  const [selectedTemperament, setSelectedTemperament] = useState('');\n  const dispatch = useDispatch();\n  const allDogs = useSelector(state => state.dogs);\n  const filteredDogs = useSelector(state => state.filtered);\n  const temperaments = useSelector(state => state.temperaments);\n\n  useEffect(() => {\n    dispatch(getByTemperaments(selectedTemperament));\n  }, [dispatch, selectedTemperament]);\n\n  const handleSelectChange = e => {\n    setSelectedTemperament(e.target.value);\n  };\n\n  const handleTemperamentClick = e => {\n    setSelectedTemperament(e.target.value);\n  };\n\n  const getDogsByTemperament = (temperament) => {\n    return allDogs.filter(dog => dog.temperament && dog.temperament.includes(temperament));\n  };\n\n  const dogsBySelectedTemperament = getDogsByTemperament(selectedTemperament);\n\n  return (\n    <div>\n      <h1>Dogs by Temperament</h1>\n      <select value={selectedTemperament} onChange={handleSelectChange}>\n        <option value=\"\">-- Select a temperament --</option>\n        {temperaments.map(temp => (\n          <option key={temp.id} value={temp.name} onClick={handleTemperamentClick}>\n            {temp.name}\n          </option>\n        ))}\n      </select>\n      <ul>\n        {dogsBySelectedTemperament.map(dog => (\n          <li key={dog.id}>\n            <p>{dog.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FilterBy;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}