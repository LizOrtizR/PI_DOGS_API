{"ast":null,"code":"import { GET_DOGS } from \"./actions\";\nconst initialState = {//estado global al inicio de mi aplicacion dogs: {allDogs:[]},\n};\nexport const rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  //es una funcion que es quien sabe que va a modificar \n  switch (action.type) {\n    case GET_DOGS:\n      return {\n        ...state,\n        allDogs: action.payload\n      };\n    ///retorna una copia del estado, modificando el valor que quiero modificar y retorna un estado nuevo \n\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_DOGS","initialState","rootReducer","state","arguments","length","undefined","action","type","allDogs","payload"],"sources":["/Users/lizzyortiz/Downloads/PI-Dogs-main/client/src/redux/reducer.js"],"sourcesContent":["import { GET_DOGS } from \"./actions\"\n\nconst initialState ={    //estado global al inicio de mi aplicacion dogs: {allDogs:[]},\n}; \n\n\nexport const rootReducer=(state = initialState,  action)=>{ //es una funcion que es quien sabe que va a modificar \n  switch (action.type) {\n    case GET_DOGS:\n        return {...state, allDogs: action.payload}   ///retorna una copia del estado, modificando el valor que quiero modificar y retorna un estado nuevo \n\n    default:\n        return state; \n  }\n}\n\nexport default rootReducer; "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,WAAW;AAEpC,MAAMC,YAAY,GAAE,CAAK;AAAA,CACxB;AAGD,OAAO,MAAMC,WAAW,GAAC,SAAAA,CAAA,EAAiC;EAAA,IAAhCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,YAAY;EAAA,IAAGM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAK;EAC1D,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKR,QAAQ;MACT,OAAO;QAAC,GAAGG,KAAK;QAAEM,OAAO,EAAEF,MAAM,CAACG;MAAO,CAAC;IAAG;;IAEjD;MACI,OAAOP,KAAK;EAAC;AAErB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}