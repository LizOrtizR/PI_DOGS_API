{"ast":null,"code":"import axios from 'axios';\nexport const GET_DOGS = \"GET_DOGS\";\nexport const GET_BY_NAME = \"GET_BY_NAME\";\nexport const GET_BY_DETAIL = \"GET_BY_DETAIL\";\nexport const GET_TEMPERAMENTS = \"GET_TEMPERAMENTS\";\n// export const FILTER_BY=\"FILTER_BY\"; \n// export const GET_BY_TEMPERAMENTS = \"GET_BY_TEMPERAMENTS \";\n// export const CHARGE_ALL = \"CHARGE_ALL\"; \nexport const ORDER_BY = \"ORDER_BY\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const CLEAN_DOGS = \"CLEAN_DOGS\";\nexport const FILTER_CARDS = 'FILTER';\nexport const ORDER_CARDS = \"ORDER\";\n\n//---------------------------------------------------------------------------------------------------------------------------\nexport const getDogs = () => {\n  return async function (dispatch) {\n    //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    const apiData = await axios.get('http://localhost:3001/dogs');\n    return dispatch({\n      type: GET_DOGS,\n      payload: apiData.data\n    }); //const GET_DOGS . el reducer recibe esta action \n  };\n};\n\nexport const getByName = name => {\n  return async function (dispatch) {\n    //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    const apiData = await axios.get(`http://localhost:3001/dogs?name=${name}`);\n    return dispatch({\n      type: GET_BY_NAME,\n      payload: apiData.data\n    }); //const GET_DOGS . el reducer recibe esta action \n  };\n};\n\nexport const getByDetail = id => {\n  return async function (dispatch) {\n    //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    const apiData = await axios.get(`http://localhost:3001/dogs/${id}`);\n    return dispatch({\n      type: GET_BY_DETAIL,\n      payload: apiData.data\n    }); //const GET_DOGS . el reducer recibe esta action \n  };\n};\n\nexport const getTemperaments = () => {\n  return async function (dispatch) {\n    //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    const apiData = await axios.get(`http://localhost:3001/temperaments`);\n    return dispatch({\n      type: GET_TEMPERAMENTS,\n      payload: apiData.data\n    }); //const GET_DOGS . el reducer recibe esta action \n  };\n};\n//------------------------------------------------------filtrar por temperamentos \n// export const getByTemperaments =(payload)=> {\n//   return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n\n//       return dispatch ({ type: GET_BY_TEMPERAMENTS , payload}); //const GET_DOGS . el reducer recibe esta action \n//   }\n// };\n\n// export const filterBy =(payload)=> {\n//   return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n\n//       return dispatch ({ type: FILTER_BY, payload}); //const GET_DOGS . el reducer recibe esta action \n//   }\n// };\n\n// export const chargeAll =()=> {\n//   return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n\n//       return dispatch ({ type: CHARGE_ALL}); //const GET_DOGS . el reducer recibe esta action \n//   }\n// };\n// export const orderBy =(order)=> {\n//   return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n\n//       return dispatch ({ type: ORDER_BY, order}); //const GET_DOGS . el reducer recibe esta action \n//   }\n// };\n\nexport const cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};\nexport const cleanDogs = () => {\n  return {\n    type: CLEAN_DOGS\n  };\n};\nexport const filterCards = temperament => {\n  return {\n    type: FILTER_CARDS\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: ORDER_CARDS,\n    payload\n  };\n};","map":{"version":3,"names":["axios","GET_DOGS","GET_BY_NAME","GET_BY_DETAIL","GET_TEMPERAMENTS","ORDER_BY","CLEAN_DETAIL","CLEAN_DOGS","FILTER_CARDS","ORDER_CARDS","getDogs","dispatch","apiData","get","type","payload","data","getByName","name","getByDetail","id","getTemperaments","cleanDetail","cleanDogs","filterCards","temperament","orderCards","order"],"sources":["/Users/lizzyortiz/Downloads/PI-Dogs-main/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios'; \nexport const GET_DOGS = \"GET_DOGS\";\nexport const GET_BY_NAME = \"GET_BY_NAME\";\nexport const GET_BY_DETAIL =\"GET_BY_DETAIL\"; \nexport const GET_TEMPERAMENTS = \"GET_TEMPERAMENTS\";\n// export const FILTER_BY=\"FILTER_BY\"; \n// export const GET_BY_TEMPERAMENTS = \"GET_BY_TEMPERAMENTS \";\n// export const CHARGE_ALL = \"CHARGE_ALL\"; \nexport const ORDER_BY=\"ORDER_BY\";\nexport const CLEAN_DETAIL=\"CLEAN_DETAIL\";\nexport const CLEAN_DOGS=\"CLEAN_DOGS\"; \nexport const FILTER_CARDS= 'FILTER'; \nexport const ORDER_CARDS=\"ORDER\"; \n\n//---------------------------------------------------------------------------------------------------------------------------\nexport const getDogs =()=> {\n    return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n      const apiData =await axios.get ('http://localhost:3001/dogs'); \n\n         return dispatch ({ type: GET_DOGS, payload: apiData.data,}); //const GET_DOGS . el reducer recibe esta action \n    }\n}; \n\n\nexport const getByName =(name)=> {\n  return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    const apiData =await axios.get (`http://localhost:3001/dogs?name=${name}`); \n\n       return dispatch ({ type: GET_BY_NAME, payload: apiData.data,}); //const GET_DOGS . el reducer recibe esta action \n  }\n}; \n\nexport const getByDetail =(id)=> {\n  return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    const apiData =await axios.get (`http://localhost:3001/dogs/${id}`); \n\n       return dispatch ({ type: GET_BY_DETAIL, payload: apiData.data,}); //const GET_DOGS . el reducer recibe esta action \n  }\n}; \n\n\n\nexport const getTemperaments =()=> {\n  return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    const apiData =await axios.get (`http://localhost:3001/temperaments`); \n\n       return dispatch ({ type: GET_TEMPERAMENTS, payload: apiData.data,}); //const GET_DOGS . el reducer recibe esta action \n  }\n}; \n//------------------------------------------------------filtrar por temperamentos \n// export const getByTemperaments =(payload)=> {\n//   return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    \n//       return dispatch ({ type: GET_BY_TEMPERAMENTS , payload}); //const GET_DOGS . el reducer recibe esta action \n//   }\n// };\n\n\n\n\n// export const filterBy =(payload)=> {\n//   return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    \n//       return dispatch ({ type: FILTER_BY, payload}); //const GET_DOGS . el reducer recibe esta action \n//   }\n// };\n\n\n// export const chargeAll =()=> {\n//   return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    \n//       return dispatch ({ type: CHARGE_ALL}); //const GET_DOGS . el reducer recibe esta action \n//   }\n// };\n// export const orderBy =(order)=> {\n//   return async function(dispatch){ //esta funcion hace la request  y cuando tiene la info hace un dispatch \n    \n//       return dispatch ({ type: ORDER_BY, order}); //const GET_DOGS . el reducer recibe esta action \n//   }\n// };\n\n\nexport const cleanDetail =()=>{\n  return {type: CLEAN_DETAIL}\n}\nexport const cleanDogs =()=>{\n  return {type: CLEAN_DOGS}\n}\nexport const filterCards =(temperament)=>{\n  return {type: FILTER_CARDS}\n}\nexport const orderCards =(order)=>{\n  return {type: ORDER_CARDS, payload }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,aAAa,GAAE,eAAe;AAC3C,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAC,UAAU;AAChC,OAAO,MAAMC,YAAY,GAAC,cAAc;AACxC,OAAO,MAAMC,UAAU,GAAC,YAAY;AACpC,OAAO,MAAMC,YAAY,GAAE,QAAQ;AACnC,OAAO,MAAMC,WAAW,GAAC,OAAO;;AAEhC;AACA,OAAO,MAAMC,OAAO,GAAEA,CAAA,KAAK;EACvB,OAAO,gBAAeC,QAAQ,EAAC;IAAE;IAC/B,MAAMC,OAAO,GAAE,MAAMZ,KAAK,CAACa,GAAG,CAAE,4BAA4B,CAAC;IAE1D,OAAOF,QAAQ,CAAE;MAAEG,IAAI,EAAEb,QAAQ;MAAEc,OAAO,EAAEH,OAAO,CAACI;IAAK,CAAC,CAAC,CAAC,CAAC;EAClE,CAAC;AACL,CAAC;;AAGD,OAAO,MAAMC,SAAS,GAAGC,IAAI,IAAI;EAC/B,OAAO,gBAAeP,QAAQ,EAAC;IAAE;IAC/B,MAAMC,OAAO,GAAE,MAAMZ,KAAK,CAACa,GAAG,CAAG,mCAAkCK,IAAK,EAAC,CAAC;IAEvE,OAAOP,QAAQ,CAAE;MAAEG,IAAI,EAAEZ,WAAW;MAAEa,OAAO,EAAEH,OAAO,CAACI;IAAK,CAAC,CAAC,CAAC,CAAC;EACrE,CAAC;AACH,CAAC;;AAED,OAAO,MAAMG,WAAW,GAAGC,EAAE,IAAI;EAC/B,OAAO,gBAAeT,QAAQ,EAAC;IAAE;IAC/B,MAAMC,OAAO,GAAE,MAAMZ,KAAK,CAACa,GAAG,CAAG,8BAA6BO,EAAG,EAAC,CAAC;IAEhE,OAAOT,QAAQ,CAAE;MAAEG,IAAI,EAAEX,aAAa;MAAEY,OAAO,EAAEH,OAAO,CAACI;IAAK,CAAC,CAAC,CAAC,CAAC;EACvE,CAAC;AACH,CAAC;;AAID,OAAO,MAAMK,eAAe,GAAEA,CAAA,KAAK;EACjC,OAAO,gBAAeV,QAAQ,EAAC;IAAE;IAC/B,MAAMC,OAAO,GAAE,MAAMZ,KAAK,CAACa,GAAG,CAAG,oCAAmC,CAAC;IAElE,OAAOF,QAAQ,CAAE;MAAEG,IAAI,EAAEV,gBAAgB;MAAEW,OAAO,EAAEH,OAAO,CAACI;IAAK,CAAC,CAAC,CAAC,CAAC;EAC1E,CAAC;AACH,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAKA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA,OAAO,MAAMM,WAAW,GAAEA,CAAA,KAAI;EAC5B,OAAO;IAACR,IAAI,EAAER;EAAY,CAAC;AAC7B,CAAC;AACD,OAAO,MAAMiB,SAAS,GAAEA,CAAA,KAAI;EAC1B,OAAO;IAACT,IAAI,EAAEP;EAAU,CAAC;AAC3B,CAAC;AACD,OAAO,MAAMiB,WAAW,GAAGC,WAAW,IAAG;EACvC,OAAO;IAACX,IAAI,EAAEN;EAAY,CAAC;AAC7B,CAAC;AACD,OAAO,MAAMkB,UAAU,GAAGC,KAAK,IAAG;EAChC,OAAO;IAACb,IAAI,EAAEL,WAAW;IAAEM;EAAQ,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"module"}