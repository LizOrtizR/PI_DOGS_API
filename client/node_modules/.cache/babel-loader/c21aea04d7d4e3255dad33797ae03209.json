{"ast":null,"code":"import { GET_DOGS, GET_BY_NAME, GET_BY_DETAIL, GET_TEMPERAMENTS, FILTER_BY, GET_BY_TEMPERAMENTS, CHARGE_ALL, ORDER_BY, CLEAN_DETAIL, CLEAN_DOGS } from \"./actions\";\nconst initialState = {\n  //estado global al inicio de mi aplicacion \n  allDogs: [],\n  dogsCopy: [],\n  detailDog: {},\n  temperament: [],\n  filtered: [] //copia del estado para que sea exactamente igual a allDogs|| es una manera de regresar al estado origina; \n};\n\nexport const rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let payload = arguments.length > 2 ? arguments[2] : undefined;\n  //es una funcion que es quien sabe que va a modificar \n  switch (action.type) {\n    case GET_DOGS:\n      return {\n        ...state,\n        ///retorna una copia del estado, modificando el valor que quiero modificar y retorna un estado nuevo \n        allDogs: action.payload,\n        dogsCopy: action.payload,\n        filtered: action.payload\n      };\n    case GET_BY_NAME:\n      return {\n        ...state,\n        filtered: action.payload\n      };\n    case GET_BY_DETAIL:\n      return {\n        ...state,\n        detailDog: action.payload\n      };\n    case CLEAN_DETAIL:\n      //me retorna una copia del estado y me da un objeto vacio, esto es para limpiar el estado\n      return {\n        ...state,\n        detailDog: {}\n      };\n    case CLEAN_DOGS:\n      return {\n        ...state,\n        allDogs: []\n      };\n    case GET_TEMPERAMENTS:\n      return {\n        ...state,\n        temperament: action.payload\n      };\n    case GET_BY_TEMPERAMENTS:\n      return {\n        ...state,\n        filtered: state.dogsCopy.filter(el => el.temperament ? el.temperaments.includes(action.payload) : null)\n      };\n    case FILTER_BY:\n      if (action.payload === 'db') {\n        var _state$dogsCopy;\n        if (state.dogsCopy.filter(item => typeof item.id === 'string').length === 0) {\n          return alert('no dog');\n        }\n        return {\n          ...state,\n          filtered: (_state$dogsCopy = state.dogsCopy) === null || _state$dogsCopy === void 0 ? void 0 : _state$dogsCopy.filter(item => typeof item.id === 'string')\n        };\n      } else {\n        return {\n          ...state,\n          filtered: state.dogsCopy.filter(item => typeof item.id === 'number')\n        };\n      }\n      ;\n    case CHARGE_ALL:\n      return {\n        ...state,\n        filtered: state.dogsCopy\n      };\n    case ORDER_BY:\n      if (action.payload === 'A-Z') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => {\n            if (prev.name > next.name) return 1;\n            if (prev.name < next.name) return -1;\n            return 0;\n          })\n        };\n      }\n      if (action.payload === 'Z-A') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => {\n            if (prev.name > next.name) return -1;\n            if (prev.name < next.name) return 1;\n            return 0;\n          })\n        };\n      }\n      if (action.payload === 'desc') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => prev.weight.toString().slice(0, 2) - next.weight.toString().slice(0, 2))\n        };\n      }\n      if (action.payload === 'asc') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => next.weight.toString().slice(0, 2) - prev.weight.toString().slice(0, 2))\n        };\n      } else {\n        return {\n          ...state,\n          filtered: state.dogsCopy\n        };\n      }\n      ;\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_DOGS","GET_BY_NAME","GET_BY_DETAIL","GET_TEMPERAMENTS","FILTER_BY","GET_BY_TEMPERAMENTS","CHARGE_ALL","ORDER_BY","CLEAN_DETAIL","CLEAN_DOGS","initialState","allDogs","dogsCopy","detailDog","temperament","filtered","rootReducer","state","arguments","length","undefined","action","payload","type","filter","el","temperaments","includes","_state$dogsCopy","item","id","alert","sort","prev","next","name","weight","toString","slice"],"sources":["/Users/lizzyortiz/Downloads/PI-Dogs-main/client/src/redux/reducer.js"],"sourcesContent":["import { GET_DOGS, GET_BY_NAME, GET_BY_DETAIL, GET_TEMPERAMENTS,\n  FILTER_BY,GET_BY_TEMPERAMENTS,CHARGE_ALL, ORDER_BY, \n  CLEAN_DETAIL,CLEAN_DOGS,} from \"./actions\"\n\nconst initialState ={  //estado global al inicio de mi aplicacion \nallDogs:[],dogsCopy:[], detailDog: {}, temperament:[], filtered:[]//copia del estado para que sea exactamente igual a allDogs|| es una manera de regresar al estado origina; \n\n}; \n\n\nexport const rootReducer=(state = initialState,  action, payload)=>{ //es una funcion que es quien sabe que va a modificar \n  switch (action.type) {\n    case GET_DOGS:\n        return {...state, ///retorna una copia del estado, modificando el valor que quiero modificar y retorna un estado nuevo \n            allDogs: action.payload, \n            dogsCopy: action.payload,\n            filtered:action.payload\n        };   \n      case GET_BY_NAME:\n        return {...state, \n          filtered:action.payload,\n\n        }; \n\n     case GET_BY_DETAIL:\n         return{...state,\n          detailDog:action.payload,\n      }; \n      \n    case CLEAN_DETAIL:    //me retorna una copia del estado y me da un objeto vacio, esto es para limpiar el estado\n      return{\n        ...state,\n        detailDog:{}\n      }\n    case CLEAN_DOGS:\n      return {\n        ...state,\n       allDogs:[]\n      }\n\n    case GET_TEMPERAMENTS:\n        return {...state,\n        temperament: action.payload,\n      \n      }; \n\n    \n   case GET_BY_TEMPERAMENTS:\n     return {\n      ...state, \n      filtered: state.dogsCopy.filter(el=>el.temperament? el.temperaments.includes(action.payload):null)\n\n    }; \n  \n    case FILTER_BY:\n      if(action.payload === 'db'){\n        if( state.dogsCopy.filter((item)=> (typeof item.id) === 'string').length === 0 ){\n           return alert('no dog')\n        }\n        return {\n            ...state, \n            filtered: state.dogsCopy?.filter((item)=> (typeof item.id) === 'string')}\n        }\n      \n    else {\n        return {\n            ...state, \n            filtered: state.dogsCopy.filter((item)=> (typeof item.id) === 'number')}\n        } ;  \n\n    case CHARGE_ALL:\n      return{\n        ...state,\n        filtered: state.dogsCopy\n      }; \n\n\n        \n\n      case ORDER_BY:\n        if(action.payload === 'A-Z'){\n          return {\n              ...state, \n              filtered: [...state.filtered].sort((prev, next) => {\n              if(prev.name > next.name) return 1\n              if(prev.name < next.name) return -1\n              return 0\n          })}}\n            \n      if(action.payload === 'Z-A'){\n          return {\n              ...state, \n              filtered: [...state.filtered].sort((prev, next) => {\n              if(prev.name > next.name) return -1\n              if(prev.name < next.name) return 1\n              return 0\n          })}}\n            \n      if(action.payload === 'desc'){\n          return {\n              ...state, \n              filtered: [...state.filtered].sort((prev,next) => prev.weight.toString().slice(0,2) - next.weight.toString().slice(0,2) )}\n         }\n            \n      if(action.payload === 'asc'){\n          return {\n              ...state, \n              filtered: [...state.filtered].sort((prev,next) => next.weight.toString().slice(0,2) - prev.weight.toString().slice(0,2))}\n          }     \n      else {\n          return {\n              ...state, \n              filtered: state.dogsCopy}\n          };\n\n\n\n\n    default:\n        return state; \n  }\n}\n\nexport default rootReducer; "],"mappings":"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"},"metadata":{},"sourceType":"module"}